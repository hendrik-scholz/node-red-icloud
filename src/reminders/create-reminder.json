[{"id":"fbd184ad.d8e278","type":"subflow","name":"logging","info":"","in":[{"x":60,"y":100,"wires":[{"id":"d7759da5.500f38"}]}],"out":[{"x":608,"y":102,"wires":[{"id":"fbd184ad.d8e278","port":0}]}]},{"id":"858bfbc4.75dd98","type":"file","z":"fbd184ad.d8e278","name":"write log entry","filename":"","appendNewline":true,"createDir":false,"overwriteFile":"false","x":462,"y":208,"wires":[]},{"id":"b603e14a.dc749","type":"function","z":"fbd184ad.d8e278","name":"prepare log entry","func":"/* \n * configure logging\n */\nvar logging = false;\nvar filename = \"/home/nodered/node-red-icloud\";\n/* define properties which values should not be logged as plaintext */\nvar list = [\"appleId\", \"apple_id\", \"password\"];\n\nif (!logging) {\n    return;\n}\n\nfunction replacePlaintext(payload, list) {\n    var k;\n\n    for (k in list) {\n        if (typeof payload !== \"undefined\" && payload !== null) {\n            if(payload.hasOwnProperty(list[k])) {\n                payload[list[k]] = \"xxx\";\n            }\n        }\n    }\n\n    /* TODO: insert code to replace property values on levels deeper than 1 */\n    \n    return payload;\n}\n\nvar logMessage = {\"filename\":filename};\nlogMessage.payload = {\n    \"url\":msg.url,\n    \"statuscode\":msg.statusCode,\n    \"headers\":msg.headers,\n    \"payload\":replacePlaintext(msg.payload, list)\n};\n\nvar timestamp = {\"filename\":filename};\ntimestamp.payload = '\\r' +\n    new Date().toISOString() +\n    \" [\" + global.get(\"function\") + \"]: \";\n\nreturn [timestamp, logMessage];","outputs":"2","noerr":0,"x":232,"y":173,"wires":[["2ebd74dc.4a6cfc"],["1bfcb369.981abd"]]},{"id":"1e2a07b0.df1778","type":"file","z":"fbd184ad.d8e278","name":"log timestamp","filename":"","appendNewline":false,"createDir":false,"overwriteFile":"false","x":460,"y":144,"wires":[]},{"id":"1bfcb369.981abd","type":"file","z":"fbd184ad.d8e278","name":"write log entry","filename":"","appendNewline":true,"createDir":false,"overwriteFile":"false","x":462,"y":208,"wires":[]},{"id":"d7759da5.500f38","type":"function","z":"fbd184ad.d8e278","name":"prepare log entry","func":"/* \n * configure logging\n */\nvar logging = false;\nvar filename = \"/home/nodered/node-red-icloud\";\n/* define properties which values should not be logged as plaintext */\nvar list = [\"appleId\", \"apple_id\", \"password\"];\n\nif (!logging) {\n    return;\n}\n\nfunction replacePlaintext(payload, list) {\n    var k;\n\n    for (k in list) {\n        if (typeof payload !== \"undefined\" && payload !== null) {\n            if(payload.hasOwnProperty(list[k])) {\n                payload[list[k]] = \"xxx\";\n            }\n        }\n    }\n\n    /* TODO: insert code to replace property values on levels deeper than 1 */\n    \n    return payload;\n}\n\nvar logMessage = {\"filename\":filename};\nlogMessage.payload = {\n    \"url\":msg.url,\n    \"statuscode\":msg.statusCode,\n    \"headers\":msg.headers,\n    \"payload\":replacePlaintext(msg.payload, list)\n};\n\nvar timestamp = {\"filename\":filename};\ntimestamp.payload = '\\r' +\n    new Date().toISOString() +\n    \" [\" + global.get(\"function\") + \"]: \";\n\nreturn [timestamp, logMessage];","outputs":"2","noerr":0,"x":232,"y":173,"wires":[["2ebd74dc.4a6cfc"],["1bfcb369.981abd"]]},{"id":"2ebd74dc.4a6cfc","type":"file","z":"fbd184ad.d8e278","name":"log timestamp","filename":"","appendNewline":false,"createDir":false,"overwriteFile":"false","x":460,"y":144,"wires":[]},{"id":"af977559.d3f9e","type":"subflow","name":"error handling","info":"","in":[{"x":45,"y":169,"wires":[{"id":"3accdcf.de97224"}]}],"out":[{"x":723,"y":169,"wires":[{"id":"e2555a.2dfa3aa8","port":0},{"id":"3accdcf.de97224","port":1}]},{"x":723,"y":226,"wires":[{"id":"3accdcf.de97224","port":2}]}]},{"id":"3accdcf.de97224","type":"function","z":"af977559.d3f9e","name":"check","func":"/* check HTTP response code */\nif (msg.statusCode === 200) {\n    var responseOk = msg;\n    \n    responseOk.req = msg.req;\n    responseOk.res = msg.res;\n    \n    /* check whether payload is filled */\n    if (responseOk.payload !== \"\") {\n        return[responseOk, null, null];\n    } else {\n        /* Since a JSON object cannot be created from\n           an empty string, the message is passed on to\n           terminal two.\n        */\n        responseOk.req = msg.req;\n        responseOk.res = msg.res;\n        \n        return[null, responseOk, null];\n    }\n} else {\n    var responseError = {\n        \"statusCode\":msg.statusCode\n    };\n\n    responseError.payload = {\n        \"function\":global.get(\"function\"),\n        \"message\":msg.payload\n    };\n\n    responseError.req = msg.req;\n    responseError.res = msg.res;\n    \n    return[null, null, responseError];\n}","outputs":"3","noerr":0,"x":171,"y":168,"wires":[["e2555a.2dfa3aa8"],["a89f2fc6.0c325"],[]]},{"id":"a89f2fc6.0c325","type":"subflow:fbd184ad.d8e278","z":"af977559.d3f9e","name":"","x":526,"y":141.5,"wires":[[]]},{"id":"e2555a.2dfa3aa8","type":"json","z":"af977559.d3f9e","name":"","x":340,"y":66,"wires":[["a89f2fc6.0c325"]]},{"id":"fbd184ad.d8e278","type":"subflow","name":"logging","info":"","in":[{"x":60,"y":100,"wires":[{"id":"d7759da5.500f38"}]}],"out":[{"x":608,"y":102,"wires":[{"id":"fbd184ad.d8e278","port":0}]}]},{"id":"858bfbc4.75dd98","type":"file","z":"fbd184ad.d8e278","name":"write log entry","filename":"","appendNewline":true,"createDir":false,"overwriteFile":"false","x":462,"y":208,"wires":[]},{"id":"b603e14a.dc749","type":"function","z":"fbd184ad.d8e278","name":"prepare log entry","func":"/* \n * configure logging\n */\nvar logging = false;\nvar filename = \"/home/nodered/node-red-icloud\";\n/* define properties which values should not be logged as plaintext */\nvar list = [\"appleId\", \"apple_id\", \"password\"];\n\nif (!logging) {\n    return;\n}\n\nfunction replacePlaintext(payload, list) {\n    var k;\n\n    for (k in list) {\n        if (typeof payload !== \"undefined\" && payload !== null) {\n            if(payload.hasOwnProperty(list[k])) {\n                payload[list[k]] = \"xxx\";\n            }\n        }\n    }\n\n    /* TODO: insert code to replace property values on levels deeper than 1 */\n    \n    return payload;\n}\n\nvar logMessage = {\"filename\":filename};\nlogMessage.payload = {\n    \"url\":msg.url,\n    \"statuscode\":msg.statusCode,\n    \"headers\":msg.headers,\n    \"payload\":replacePlaintext(msg.payload, list)\n};\n\nvar timestamp = {\"filename\":filename};\ntimestamp.payload = '\\r' +\n    new Date().toISOString() +\n    \" [\" + global.get(\"function\") + \"]: \";\n\nreturn [timestamp, logMessage];","outputs":"2","noerr":0,"x":232,"y":173,"wires":[["2ebd74dc.4a6cfc"],["1bfcb369.981abd"]]},{"id":"1e2a07b0.df1778","type":"file","z":"fbd184ad.d8e278","name":"log timestamp","filename":"","appendNewline":false,"createDir":false,"overwriteFile":"false","x":460,"y":144,"wires":[]},{"id":"1bfcb369.981abd","type":"file","z":"fbd184ad.d8e278","name":"write log entry","filename":"","appendNewline":true,"createDir":false,"overwriteFile":"false","x":462,"y":208,"wires":[]},{"id":"d7759da5.500f38","type":"function","z":"fbd184ad.d8e278","name":"prepare log entry","func":"/* \n * configure logging\n */\nvar logging = false;\nvar filename = \"/home/nodered/node-red-icloud\";\n/* define properties which values should not be logged as plaintext */\nvar list = [\"appleId\", \"apple_id\", \"password\"];\n\nif (!logging) {\n    return;\n}\n\nfunction replacePlaintext(payload, list) {\n    var k;\n\n    for (k in list) {\n        if (typeof payload !== \"undefined\" && payload !== null) {\n            if(payload.hasOwnProperty(list[k])) {\n                payload[list[k]] = \"xxx\";\n            }\n        }\n    }\n\n    /* TODO: insert code to replace property values on levels deeper than 1 */\n    \n    return payload;\n}\n\nvar logMessage = {\"filename\":filename};\nlogMessage.payload = {\n    \"url\":msg.url,\n    \"statuscode\":msg.statusCode,\n    \"headers\":msg.headers,\n    \"payload\":replacePlaintext(msg.payload, list)\n};\n\nvar timestamp = {\"filename\":filename};\ntimestamp.payload = '\\r' +\n    new Date().toISOString() +\n    \" [\" + global.get(\"function\") + \"]: \";\n\nreturn [timestamp, logMessage];","outputs":"2","noerr":0,"x":232,"y":173,"wires":[["2ebd74dc.4a6cfc"],["1bfcb369.981abd"]]},{"id":"2ebd74dc.4a6cfc","type":"file","z":"fbd184ad.d8e278","name":"log timestamp","filename":"","appendNewline":false,"createDir":false,"overwriteFile":"false","x":460,"y":144,"wires":[]},{"id":"c5bc9ec5.5e5ae8","type":"http in","z":"2f228988.a49cb6","name":"reminder request","url":"/reminders","method":"post","swaggerDoc":"","x":180,"y":120,"wires":[["c5c1717d.557b8"]]},{"id":"6927854.5a585fc","type":"function","z":"2f228988.a49cb6","name":"prepare iCloud login request","func":"global.set(\"function\", \"login\");\n\nvar loginMsg = {};\n\n/* HTTP header */\nloginMsg.headers = {\n    \"origin\":\"https://www.icloud.com\"\n};\n\n/* payload */\nloginMsg.payload = {\n    \"apple_id\":msg.payload.appleId,\n    \"password\":msg.payload.password,\n    \"extended_login\":false\n};\n\nloginMsg.req = msg.req;\nloginMsg.res = msg.res;\n\nreturn loginMsg;","outputs":1,"noerr":0,"x":220,"y":440,"wires":[["dff7a7d1.0b41b8"]]},{"id":"99b64ca3.55df1","type":"http request","z":"2f228988.a49cb6","name":"iCloud login","method":"POST","ret":"txt","url":"https://setup.icloud.com/setup/ws/1/login","x":170,"y":500,"wires":[["1db2861d.fbcea2"]]},{"id":"f34049cb.b0c998","type":"function","z":"2f228988.a49cb6","name":"prepare reminder request","func":"global.set(\"function\", \"create\");\n\n/* function to generate guid */\nfunction generateGuid() {\n    var guid = \"\";\n\n    for (var i = 0; i < 32; i++) {\n        if (i === 8 || i === 12 || i === 16 || i === 20) {\n            guid += \"-\"\n        }\n\n        guid += Math.floor(Math.random()*0xF).toString(0xF);\n    }\n\n    return guid;\n}\n\n/* function to format a date */\nfunction formatDate (dateString) {\n    var dateArray = [\n        parseInt(dateString.substring(0, 10).replace(/-/g, \"\")),\n        parseInt(dateString.substring(0, 4)),\n        parseInt(dateString.substring(5, 7)),\n        parseInt(dateString.substring(8, 10)),\n        parseInt(dateString.substring(11, 13)),\n        parseInt(dateString.substring(14, 16)),\n        600];\n    \n    return dateArray;\n}\n\n/* get guid of list by given name */\nvar lists = msg.payload.Collections;\nvar list = {};\nvar k;\nfor (k in lists) {\n    list = lists[k];\n\n    if (list.title === flow.get(\"reminderList\")) {\n        break;\n    }\n    \n    /* If the list you wanted to add the reminder to does not\n     * exist, the reminder is put on one of the existing lists.\n     */\n}\n\n/* create URL */\nvar url = flow.get(\"remindersurl\") +\n        \"/rd/reminders/\" +\n        list.guid +\n        \"?\" +\n        \"usertz=Europe/Berlin\" +\n        \"&lang=\" + flow.get(\"languageCode\") +\n        \"&dsid=\" + flow.get(\"dsid\");\n\n/* set URL */\nvar reminderRequest = {\"url\":url};\n\n/* HTTP header */\nreminderRequest.headers = {\n    \"origin\":\"https://www.icloud.com\",\n    \"cookie\":flow.get(\"sessionCookie\")\n};\n\n/* payload */\nreminderRequest.payload = {\"Reminders\": {\n   \"guid\": generateGuid(),\n   \"pGuid\": list.guid,\n   \"etag\": \"C=42@U=\" + generateGuid(),\n   \"createdDateExtended\": 475847804,\n   \"completedDate\": null,\n   \"order\": 475847804,\n   \"title\": flow.get(\"title\"),\n   \"description\": flow.get(\"description\"),\n   \"dueDate\": null,\n   \"dueDateIsAllDay\": false,\n   \"startDate\": null,\n   \"startDateIsAllDay\": true,\n   \"startDateTz\": null,\n   \"recurrence\": null,\n   \"alarms\": [{\n      \"messageType\":\"message\",\n      \"onDate\": null,\n\t  \"measurement\": null,\n      \"description\": \"Reminder\",\n      \"guid\": generateGuid(),\n      \"isLocationBased\": true,\n      \"proximity\": flow.get(\"proximity\"),\n      \"structuredLocation\": null\n   }]\n}};\n\n/* map priority values */\nif (flow.get(\"priority\") == \"1\") {\n    reminderRequest.payload.Reminders.priority = 1;\n} else if (flow.get(\"priority\") == \"2\") {\n    reminderRequest.payload.Reminders.priority = 5;\n} else if (flow.get(\"priority\") == \"3\") {\n    reminderRequest.payload.Reminders.priority = 9;\n}\n\n/* if an alarm is set */\nif (undefined !== flow.get(\"alarm\")) {\n    reminderRequest.payload.Reminders.dueDate = formatDate(flow.get(\"alarm\"));\n    \n    reminderRequest.payload.Reminders.startDate = formatDate(flow.get(\"alarm\"));\n    reminderRequest.payload.Reminders.startDateIsAllDay = false;\n    reminderRequest.payload.Reminders.startDateTz = \"Europe/Berlin\";\n    \n    reminderRequest.payload.Reminders.alarms[0].onDate = \n        formatDate(flow.get(\"alarm\"));\n}\n\n/* map location only if latitude and longitude is given */\nif (undefined !== flow.get(\"latitude\") &&\n    undefined !== flow.get(\"longitude\")) {\n    reminderRequest.payload.Reminders.alarms[0].structuredLocation = {};\n    reminderRequest.payload.Reminders.alarms[0].structuredLocation.\n        address = flow.get(\"address\");\n    reminderRequest.payload.Reminders.alarms[0].structuredLocation.\n        latitude = flow.get(\"latitude\");\n    reminderRequest.payload.Reminders.alarms[0].structuredLocation.\n        longitude = flow.get(\"longitude\");\n    reminderRequest.payload.Reminders.alarms[0].structuredLocation.\n        locationName = flow.get(\"locationName\");\n}\n\nreminderRequest.req = msg.req;\nreminderRequest.res = msg.res;\n\nreturn reminderRequest;","outputs":1,"noerr":0,"x":210,"y":960,"wires":[["8e5e8f2a.172cd"]]},{"id":"17795dda.24c352","type":"http request","z":"2f228988.a49cb6","name":"iCloud create reminder","method":"POST","ret":"txt","url":"","x":210,"y":1020,"wires":[["cb859d54.455a6"]]},{"id":"d650c1c.34ecbc","type":"function","z":"2f228988.a49cb6","name":"prepare logout request","func":"global.set(\"function\", \"logout\");\n\nvar logoutRequest = {};\nlogoutRequest.payload = {};\n\n/* HTTP header */\nlogoutRequest.headers = {\n    \"Origin\":\"https://www.icloud.com\",\n    \"cookie\":flow.get(\"sessionCookie\")\n};\n\nlogoutRequest.req = msg.req;\nlogoutRequest.res = msg.res;\n\nreturn logoutRequest;","outputs":1,"noerr":0,"x":210,"y":1240,"wires":[["8f9df403.d47118"]]},{"id":"286e8b06.2d4de4","type":"http request","z":"2f228988.a49cb6","name":"iCloud logout","method":"POST","ret":"txt","url":"https://setup.icloud.com/setup/ws/1/logout","x":180,"y":1300,"wires":[["2b6a3bb7.e53a2c"]]},{"id":"1b461b70.5a6165","type":"http response","z":"2f228988.a49cb6","name":"reminder response","x":810,"y":1500,"wires":[]},{"id":"c79054b7.f6927","type":"function","z":"2f228988.a49cb6","name":"prepare reminder response","func":"global.set(\"function\", \"reminder response\");\n\nmsg.req = msg.req;\nmsg.res = msg.res;\n\nreturn msg;","outputs":1,"noerr":0,"x":220,"y":1500,"wires":[["ec54a6ee.71ede"]]},{"id":"ac3f7d66.188f9","type":"subflow:fbd184ad.d8e278","z":"2f228988.a49cb6","name":"","x":160,"y":240,"wires":[["6927854.5a585fc"]]},{"id":"dff7a7d1.0b41b8","type":"subflow:fbd184ad.d8e278","z":"2f228988.a49cb6","name":"","x":500,"y":440,"wires":[["99b64ca3.55df1"]]},{"id":"8e5e8f2a.172cd","type":"subflow:fbd184ad.d8e278","z":"2f228988.a49cb6","name":"","x":500,"y":960,"wires":[["17795dda.24c352"]]},{"id":"8f9df403.d47118","type":"subflow:fbd184ad.d8e278","z":"2f228988.a49cb6","x":500,"y":1240,"wires":[["286e8b06.2d4de4"]]},{"id":"ec54a6ee.71ede","type":"subflow:fbd184ad.d8e278","z":"2f228988.a49cb6","x":500,"y":1500,"wires":[["1b461b70.5a6165"]]},{"id":"1db2861d.fbcea2","type":"subflow:af977559.d3f9e","z":"2f228988.a49cb6","name":"","x":520,"y":500,"wires":[["450de4c6.1df174"],["1b461b70.5a6165"]]},{"id":"cb859d54.455a6","type":"subflow:af977559.d3f9e","z":"2f228988.a49cb6","name":"","x":520,"y":1020,"wires":[["d650c1c.34ecbc"],["1b461b70.5a6165"]]},{"id":"2b6a3bb7.e53a2c","type":"subflow:af977559.d3f9e","z":"2f228988.a49cb6","name":"","x":520,"y":1300,"wires":[["c79054b7.f6927"],["1b461b70.5a6165"]]},{"id":"c5c1717d.557b8","type":"function","z":"2f228988.a49cb6","name":"save input to context","func":"global.set(\"function\", \"reminder request\");\n\n/* save input to context */\nflow.set(\"appleId\", msg.payload.appleId);\nflow.set(\"password\", msg.payload.password);\nflow.set(\"reminderList\", msg.payload.reminderList);\nflow.set(\"priority\", msg.payload.priority);\nflow.set(\"title\", msg.payload.title);\nflow.set(\"description\", msg.payload.description);\nflow.set(\"proximity\", msg.payload.proximity);\nflow.set(\"address\", msg.payload.address);\nflow.set(\"locationName\", msg.payload.locationName);\nflow.set(\"latitude\", msg.payload.latitude);\nflow.set(\"longitude\", msg.payload.longitude);\nflow.set(\"alarm\", msg.payload.alarm);\n\nmsg.req = msg.req;\nmsg.res = msg.res;\n\nreturn msg;","outputs":1,"noerr":0,"x":200,"y":180,"wires":[["ac3f7d66.188f9"]]},{"id":"450de4c6.1df174","type":"function","z":"2f228988.a49cb6","name":"prepare startup request","func":"global.set(\"function\", \"startup\");\n\n/* get all cookies from the login response */\nvar cookies = msg.headers[\"set-cookie\"];\nvar sessionCookie = \"\";\nvar k;\n\nfor (k in cookies) {\n    sessionCookie += cookies[k].substring(0, cookies[k].indexOf(\";\") + 1);\n}\n\nsessionCookie = sessionCookie.substring(0, sessionCookie.lastIndexOf(\";\"));\n/* get all cookies from login response - end */\n\n/* store property values of the login response */\nflow.set(\"remindersurl\", msg.payload.webservices.reminders.url);\nflow.set(\"languageCode\", msg.payload.dsInfo.languageCode);\nflow.set(\"dsid\", msg.payload.dsInfo.dsid);\nflow.set(\"sessionCookie\", sessionCookie);\n\n/* create URL */\nvar url = flow.get(\"remindersurl\") +\n        \"/rd/startup\" +\n        \"?\" +\n        \"usertz=Europe/London\" + /* TODO: set actual user time zone */\n        \"&lang=\" + msg.payload.dsInfo.languageCode +\n        \"&dsid=\" + msg.payload.dsInfo.dsid;\n\n/* set URL */\nvar startupRequest = {\"url\":url};\n\n/* HTTP header */\nstartupRequest.headers = {\n    \"origin\":\"https://www.icloud.com\",\n    \"cookie\":flow.get(\"sessionCookie\")\n};\n\nstartupRequest.req = msg.req;\nstartupRequest.res = msg.res;\n\nreturn startupRequest;","outputs":1,"noerr":0,"x":210,"y":700,"wires":[["a7777be7.2d71"]]},{"id":"a7777be7.2d71","type":"subflow:fbd184ad.d8e278","z":"2f228988.a49cb6","name":"","x":500,"y":700,"wires":[["a07ce704.a61988"]]},{"id":"a07ce704.a61988","type":"http request","z":"2f228988.a49cb6","name":"iCloud startup","method":"GET","ret":"txt","url":"","x":180,"y":760,"wires":[["b524e63f.019358"]]},{"id":"b524e63f.019358","type":"subflow:af977559.d3f9e","z":"2f228988.a49cb6","name":"","x":520,"y":760,"wires":[["f34049cb.b0c998"],["1b461b70.5a6165"]]},{"id":"fb9ef484.533c7","type":"comment","z":"2f228988.a49cb6","name":"iCloud login","info":"-prepares the message for logging into the iCloud account\n-sends the login message to the iCloud service","x":170,"y":380,"wires":[]},{"id":"58a75825.5d7358","type":"comment","z":"2f228988.a49cb6","name":"iCloud startup","info":"-prepares the message for retrieving values from the iCloud account, e.g.\n the names und guids of the existing reminder lists\n-sends the startup message to the iCloud service","x":170,"y":640,"wires":[]},{"id":"b998ed9c.be07b8","type":"comment","z":"2f228988.a49cb6","name":"iCloud create","info":"-prepares the message to create a geofence reminder\n-sends the creation message to the iCloud service","x":170,"y":900,"wires":[]},{"id":"a4381198.007bb","type":"comment","z":"2f228988.a49cb6","name":"iCloud logout","info":"-logs out from the iCloud account","x":170,"y":1180,"wires":[]},{"id":"6e463e79.6dfb7","type":"comment","z":"2f228988.a49cb6","name":"output","info":"-prepares the output of the service\n-currently, the result of the last operation is returned","x":150,"y":1440,"wires":[]},{"id":"b462e284.8ffa7","type":"comment","z":"2f228988.a49cb6","name":"input","info":"receives the input message\n\nThe following message is an example for an input message:\n\n{\n\"appleId\":\"\",\n\"password\":\"\",\n\"reminderList\":\"Reminders\",\n\"priority\":1,\n\"title\":\"Get a birthday present for Lisa\",\n\"description\":\"Call Robert to ask what Lisa likes.\",\n\"proximity\":\"ARRIVE\",\n\"address\":\"Harrods, 87-135 Brompton Road, London SW1X 7XL\",\n\"locationName\":\"Harrods\",\n\"latitude\":\"51.4992917\",\n\"longitude\":\"-0.162811\",\n\"alarm\":\"2017-01-01T00:00:00\"\n}","x":150,"y":60,"wires":[]}]